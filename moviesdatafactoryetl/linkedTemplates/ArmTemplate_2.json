{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "moviesdatafactoryetl"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/load_stg_genre')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "move_db_landing",
								"type": "DatasetReference"
							},
							"name": "landingmovies"
						},
						{
							"dataset": {
								"referenceName": "map_genre",
								"type": "DatasetReference"
							},
							"name": "mapgenre"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "stg_genre",
								"type": "DatasetReference"
							},
							"name": "sinkStgGenre"
						}
					],
					"transformations": [
						{
							"name": "splitGenre"
						},
						{
							"name": "flattenGenre"
						},
						{
							"name": "distinctGenre"
						},
						{
							"name": "selectGenre"
						},
						{
							"name": "trimGenre"
						},
						{
							"name": "joinMapGenre"
						},
						{
							"name": "selectGenreGenreId"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Rank as integer,",
						"          Title as string,",
						"          Genre as string,",
						"          Description as string,",
						"          Director as string,",
						"          Actors as string,",
						"          Year as integer,",
						"          Runtime_Minutes as integer,",
						"          Rating as double,",
						"          Votes as integer,",
						"          Revenue_Millions as double,",
						"          Metascore as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> landingmovies",
						"source(output(",
						"          genre_id as integer,",
						"          genre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> mapgenre",
						"landingmovies derive(Genre = split(Genre, ',')) ~> splitGenre",
						"splitGenre foldDown(unroll(Genre),",
						"     mapColumn(",
						"          Rank,",
						"          Title,",
						"          Genre,",
						"          Description,",
						"          Director,",
						"          Actors,",
						"          Year,",
						"          {Runtime (Minutes)} = Runtime_Minutes,",
						"          Rating,",
						"          Votes,",
						"          {Revenue (Millions)} = Revenue_Millions,",
						"          Metascore",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flattenGenre",
						"trimGenre aggregate(groupBy(Genre),",
						"     each(match(name=='Rank'), $$ = first($$))) ~> distinctGenre",
						"distinctGenre select(mapColumn(",
						"          Genre",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectGenre",
						"flattenGenre derive(Genre = trim(Genre)) ~> trimGenre",
						"selectGenre, mapgenre join(selectGenre@Genre == mapgenre@genre,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinMapGenre",
						"joinMapGenre select(mapColumn(",
						"          Genre = selectGenre@Genre,",
						"          genre_id",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectGenreGenreId",
						"selectGenreGenreId sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          genre_id as integer,",
						"          genre as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     batchSize: 100,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          genre_id,",
						"          genre = Genre",
						"     )) ~> sinkStgGenre"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_stg_genre_film_assoc')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "move_db_landing",
								"type": "DatasetReference"
							},
							"name": "landmovies"
						},
						{
							"dataset": {
								"referenceName": "map_genre",
								"type": "DatasetReference"
							},
							"name": "mapgenre"
						},
						{
							"dataset": {
								"referenceName": "map_film",
								"type": "DatasetReference"
							},
							"name": "mapfilm"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "stg_genre_film_assoc",
								"type": "DatasetReference"
							},
							"name": "sinkStgGenreFilmAssoc"
						}
					],
					"transformations": [
						{
							"name": "splitGenre"
						},
						{
							"name": "flattenGenre"
						},
						{
							"name": "trimGenre"
						},
						{
							"name": "joinMapFilm"
						},
						{
							"name": "joinMapGenre"
						},
						{
							"name": "selectFilmIdGenreId"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Rank as integer,",
						"          Title as string,",
						"          Genre as string,",
						"          Description as string,",
						"          Director as string,",
						"          Actors as string,",
						"          Year as integer,",
						"          Runtime_Minutes as integer,",
						"          Rating as double,",
						"          Votes as integer,",
						"          Revenue_Millions as double,",
						"          Metascore as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> landmovies",
						"source(output(",
						"          genre_id as integer,",
						"          genre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> mapgenre",
						"source(output(",
						"          film_id as integer,",
						"          title as string,",
						"          film_year as integer,",
						"          director as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> mapfilm",
						"landmovies derive(Genre = split(Genre, ',')) ~> splitGenre",
						"splitGenre foldDown(unroll(Genre),",
						"     mapColumn(",
						"          Rank,",
						"          Title,",
						"          Genre,",
						"          Description,",
						"          Director,",
						"          Actors,",
						"          Year,",
						"          {Runtime (Minutes)} = Runtime_Minutes,",
						"          Rating,",
						"          Votes,",
						"          {Revenue (Millions)} = Revenue_Millions,",
						"          Metascore",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flattenGenre",
						"flattenGenre derive(Genre = trim(Genre)) ~> trimGenre",
						"trimGenre, mapfilm join(flattenGenre@Director == mapfilm@director",
						"     && flattenGenre@Title == mapfilm@title,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinMapFilm",
						"joinMapFilm, mapgenre join(trimGenre@Genre == mapgenre@genre,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinMapGenre",
						"joinMapGenre select(mapColumn(",
						"          film_id,",
						"          genre_id",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectFilmIdGenreId",
						"selectFilmIdGenreId sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          stg_genre_film_id as integer,",
						"          genre_id as integer,",
						"          film_id as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     batchSize: 100,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          genre_id,",
						"          film_id",
						"     )) ~> sinkStgGenreFilmAssoc"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Extract')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_landing",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_landing",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"bloblanding": {},
									"tomoviesdblanding": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-22T03:32:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/load dim')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_dim_movie",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_dim_movie",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"stgfilm": {},
									"targetDimMovie": {},
									"updateDimMovie": {},
									"insertDimMovie": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "load_dim_genre_movie_assoc",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_dim_genre_movie_assoc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"stggenrefilmassoc": {},
									"targetDimGenreFilmAssoc": {},
									"insertDimGenreFilmAssoc": {},
									"updateDimGenreFilmAssoc": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "load_dim_actor",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_dim_actor",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"stgactor": {},
									"targetDimActor": {},
									"updateDimActor": {},
									"insertDimActor": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "load_dim_movie_actor_assoc",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_dim_actor_movie_assoc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"stgactorfilmassoc": {},
									"targetdimactorfilmassoc": {},
									"sinkDimActorFilmAssoc": {},
									"updateDimActorFilmAssoc": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "load_dim_dir",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_dim_dir",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"mapdir": {},
									"targetDimDir": {},
									"insertDimDir": {},
									"updateDimDir": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "load_dim_year",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_dim_year",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"mapyear": {},
									"targetDimYear": {},
									"insertDimYear": {},
									"updateDimYear": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "load_dim_genre",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_dim_genre",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"stggenre": {},
									"targetdimgenre": {},
									"insertDimGenre": {},
									"updateDimGenre": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/load fact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_fact_film",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_fact_film",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"stgfilm": {},
									"mapdirector": {},
									"mapyear": {},
									"mapfilm": {},
									"targetFactFilm": {},
									"insertFactFilm": {},
									"updateFactFilm": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/load map')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_map_actor",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_map_actor",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"landMovies": {},
									"targetMapActors": {},
									"loadintomapactors": {},
									"insertMapActor": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "load_map_genre",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_map_genre",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"landingmovies": {},
									"targetMapGenre": {},
									"insertMapGenre": {},
									"updateMapGenre": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "load_map_dir",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_map_dir",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"landingmovies": {},
									"mapdirector": {},
									"sinkMapDirector": {},
									"insertMapDirector": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "load_map_year",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_map_year",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"landingmovies": {},
									"targetMapYear": {},
									"insertMapYear": {},
									"updateMapYear": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "load_map_film",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_map_film",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"landmovies": {},
									"targetMapFilm": {},
									"insertMapFilm": {},
									"updateMapFilm": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/load stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_stg_actor_film_assoc",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_stg_actor_film_assoc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"landingmovies": {},
									"mapactor": {},
									"mapfilm": {},
									"insertStgActorFilmAssoc": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "load_stg_actor",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_stg_actor",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"landmovies": {},
									"mapactor": {},
									"stgactor": {},
									"insertstgactor": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "load_stg_genre_film_assoc",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_stg_genre_film_assoc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"landmovies": {},
									"mapgenre": {},
									"mapfilm": {},
									"sinkStgGenreFilmAssoc": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "load_stg_genre",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_stg_genre",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"landingmovies": {},
									"mapgenre": {},
									"sinkStgGenre": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "load_stg_film",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_stg_film",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"landingmovie": {},
									"mapfilm": {},
									"insertStgFilm": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/load_stg_genre_film_assoc')]",
				"[concat(variables('factoryId'), '/dataflows/load_stg_genre')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_dim_year",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_dim_year",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"mapyear": {},
									"targetDimYear": {},
									"insertDimYear": {},
									"updateDimYear": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}