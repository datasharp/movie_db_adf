{
	"name": "load_dim_actor",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "stg_actor",
						"type": "DatasetReference"
					},
					"name": "stgactor"
				},
				{
					"dataset": {
						"referenceName": "dim_actor",
						"type": "DatasetReference"
					},
					"name": "targetDimActor"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dim_actor",
						"type": "DatasetReference"
					},
					"name": "updateDimActor"
				},
				{
					"dataset": {
						"referenceName": "dim_actor",
						"type": "DatasetReference"
					},
					"name": "insertDimActor"
				}
			],
			"transformations": [
				{
					"name": "existsUpdate"
				},
				{
					"name": "notExistsInsert"
				},
				{
					"name": "updateif"
				}
			],
			"scriptLines": [
				"source(output(",
				"          actor_id as integer,",
				"          actor as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> stgactor",
				"source(output(",
				"          actor_id as integer,",
				"          actor as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> targetDimActor",
				"stgactor, targetDimActor join(stgactor@actor_id == targetDimActor@actor_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> existsUpdate",
				"stgactor, targetDimActor exists(stgactor@actor == targetDimActor@actor,",
				"     negate:true,",
				"     broadcast: 'auto')~> notExistsInsert",
				"existsUpdate alterRow(updateIf(notEquals(iifNull(stgactor@actor,'NULL',stgactor@actor),iifNull(targetDimActor@actor,'NULL',targetDimActor@actor)))) ~> updateif",
				"updateif sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          actor_id as integer,",
				"          actor as string",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['actor_id'],",
				"     format: 'table',",
				"     batchSize: 100,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          actor_id = stgactor@actor_id,",
				"          actor = stgactor@actor",
				"     )) ~> updateDimActor",
				"notExistsInsert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          actor_id as integer,",
				"          actor as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     batchSize: 100,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          actor_id,",
				"          actor",
				"     )) ~> insertDimActor"
			]
		}
	}
}