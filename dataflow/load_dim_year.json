{
	"name": "load_dim_year",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "map_year",
						"type": "DatasetReference"
					},
					"name": "mapyear"
				},
				{
					"dataset": {
						"referenceName": "dim_year",
						"type": "DatasetReference"
					},
					"name": "targetDimYear"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dim_year",
						"type": "DatasetReference"
					},
					"name": "insertDimYear"
				},
				{
					"dataset": {
						"referenceName": "dim_year",
						"type": "DatasetReference"
					},
					"name": "updateDimYear"
				}
			],
			"transformations": [
				{
					"name": "notExistsInsert"
				},
				{
					"name": "existsUpdate"
				},
				{
					"name": "updateIf"
				}
			],
			"scriptLines": [
				"source(output(",
				"          year_id as integer,",
				"          year as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> mapyear",
				"source(output(",
				"          date_id as integer,",
				"          year as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> targetDimYear",
				"mapyear, targetDimYear exists(year_id == date_id,",
				"     negate:true,",
				"     broadcast: 'auto')~> notExistsInsert",
				"mapyear, targetDimYear join(year_id == date_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> existsUpdate",
				"existsUpdate alterRow(updateIf(notEquals(iifNull(mapyear@year,-1,mapyear@year),iifNull(targetDimYear@year,-1,targetDimYear@year)))) ~> updateIf",
				"notExistsInsert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          date_id as integer,",
				"          year as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          date_id = year_id,",
				"          year",
				"     )) ~> insertDimYear",
				"updateIf sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          date_id as integer,",
				"          year as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['date_id'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          date_id = year_id,",
				"          year = mapyear@year",
				"     )) ~> updateDimYear"
			]
		}
	}
}